

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "PFC Project\Web.config"
//     Connection String Name: "DefaultConnection"
//     Connection String:      "Data Source=142.93.252.124;Initial Catalog=pfc_project_draft;User ID=sa;password=**zapped**;"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Developer Edition (64-bit)
// Database Engine Edition : Enterprise
// Database Version        : 14.0.3035.2

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace PFC_Project.Data
{
    using System.Linq;

    #region Unit of work

    public interface IMyDbContext : System.IDisposable
    {
        System.Data.Entity.DbSet<ActivityDone> ActivityDones { get; set; } // activity_done
        System.Data.Entity.DbSet<ActivityRecord> ActivityRecords { get; set; } // activity_record
        System.Data.Entity.DbSet<AspNetRole> AspNetRoles { get; set; } // AspNetRoles
        System.Data.Entity.DbSet<AspNetUser> AspNetUsers { get; set; } // AspNetUsers
        System.Data.Entity.DbSet<AspNetUserClaim> AspNetUserClaims { get; set; } // AspNetUserClaims
        System.Data.Entity.DbSet<AspNetUserLogin> AspNetUserLogins { get; set; } // AspNetUserLogins
        System.Data.Entity.DbSet<Class> Classes { get; set; } // class
        System.Data.Entity.DbSet<Classroom> Classrooms { get; set; } // classroom
        System.Data.Entity.DbSet<Employee> Employees { get; set; } // employees
        System.Data.Entity.DbSet<Equipment> Equipments { get; set; } // equipment
        System.Data.Entity.DbSet<EquipmentType> EquipmentTypes { get; set; } // equipment_type
        System.Data.Entity.DbSet<FitnessCourse> FitnessCourses { get; set; } // fitness_course
        System.Data.Entity.DbSet<FitnessMeasure> FitnessMeasures { get; set; } // fitness_measure
        System.Data.Entity.DbSet<Instructor> Instructors { get; set; } // instructor
        System.Data.Entity.DbSet<Item> Items { get; set; } // item
        System.Data.Entity.DbSet<ItemReorder> ItemReorders { get; set; } // item_reorder
        System.Data.Entity.DbSet<Member> Members { get; set; } // members
        System.Data.Entity.DbSet<MemType> MemTypes { get; set; } // mem_type
        System.Data.Entity.DbSet<Order> Orders { get; set; } // order
        System.Data.Entity.DbSet<ReturnTransaction> ReturnTransactions { get; set; } // return_transaction
        System.Data.Entity.DbSet<Sale> Sales { get; set; } // sale
        System.Data.Entity.DbSet<SessionRecord> SessionRecords { get; set; } // session_record
        System.Data.Entity.DbSet<Transaction> Transactions { get; set; } // transaction
        System.Data.Entity.DbSet<Vendor> Vendors { get; set; } // vendor

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MyDbContext : System.Data.Entity.DbContext, IMyDbContext
    {
        public System.Data.Entity.DbSet<ActivityDone> ActivityDones { get; set; } // activity_done
        public System.Data.Entity.DbSet<ActivityRecord> ActivityRecords { get; set; } // activity_record
        public System.Data.Entity.DbSet<AspNetRole> AspNetRoles { get; set; } // AspNetRoles
        public System.Data.Entity.DbSet<AspNetUser> AspNetUsers { get; set; } // AspNetUsers
        public System.Data.Entity.DbSet<AspNetUserClaim> AspNetUserClaims { get; set; } // AspNetUserClaims
        public System.Data.Entity.DbSet<AspNetUserLogin> AspNetUserLogins { get; set; } // AspNetUserLogins
        public System.Data.Entity.DbSet<Class> Classes { get; set; } // class
        public System.Data.Entity.DbSet<Classroom> Classrooms { get; set; } // classroom
        public System.Data.Entity.DbSet<Employee> Employees { get; set; } // employees
        public System.Data.Entity.DbSet<Equipment> Equipments { get; set; } // equipment
        public System.Data.Entity.DbSet<EquipmentType> EquipmentTypes { get; set; } // equipment_type
        public System.Data.Entity.DbSet<FitnessCourse> FitnessCourses { get; set; } // fitness_course
        public System.Data.Entity.DbSet<FitnessMeasure> FitnessMeasures { get; set; } // fitness_measure
        public System.Data.Entity.DbSet<Instructor> Instructors { get; set; } // instructor
        public System.Data.Entity.DbSet<Item> Items { get; set; } // item
        public System.Data.Entity.DbSet<ItemReorder> ItemReorders { get; set; } // item_reorder
        public System.Data.Entity.DbSet<Member> Members { get; set; } // members
        public System.Data.Entity.DbSet<MemType> MemTypes { get; set; } // mem_type
        public System.Data.Entity.DbSet<Order> Orders { get; set; } // order
        public System.Data.Entity.DbSet<ReturnTransaction> ReturnTransactions { get; set; } // return_transaction
        public System.Data.Entity.DbSet<Sale> Sales { get; set; } // sale
        public System.Data.Entity.DbSet<SessionRecord> SessionRecords { get; set; } // session_record
        public System.Data.Entity.DbSet<Transaction> Transactions { get; set; } // transaction
        public System.Data.Entity.DbSet<Vendor> Vendors { get; set; } // vendor

        static MyDbContext()
        {
            System.Data.Entity.Database.SetInitializer<MyDbContext>(null);
        }

        public MyDbContext()
            : base("Name=DefaultConnection")
        {
        }

        public MyDbContext(string connectionString)
            : base(connectionString)
        {
        }

        public MyDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public MyDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public MyDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new ActivityDoneConfiguration());
            modelBuilder.Configurations.Add(new ActivityRecordConfiguration());
            modelBuilder.Configurations.Add(new AspNetRoleConfiguration());
            modelBuilder.Configurations.Add(new AspNetUserConfiguration());
            modelBuilder.Configurations.Add(new AspNetUserClaimConfiguration());
            modelBuilder.Configurations.Add(new AspNetUserLoginConfiguration());
            modelBuilder.Configurations.Add(new ClassConfiguration());
            modelBuilder.Configurations.Add(new ClassroomConfiguration());
            modelBuilder.Configurations.Add(new EmployeeConfiguration());
            modelBuilder.Configurations.Add(new EquipmentConfiguration());
            modelBuilder.Configurations.Add(new EquipmentTypeConfiguration());
            modelBuilder.Configurations.Add(new FitnessCourseConfiguration());
            modelBuilder.Configurations.Add(new FitnessMeasureConfiguration());
            modelBuilder.Configurations.Add(new InstructorConfiguration());
            modelBuilder.Configurations.Add(new ItemConfiguration());
            modelBuilder.Configurations.Add(new ItemReorderConfiguration());
            modelBuilder.Configurations.Add(new MemberConfiguration());
            modelBuilder.Configurations.Add(new MemTypeConfiguration());
            modelBuilder.Configurations.Add(new OrderConfiguration());
            modelBuilder.Configurations.Add(new ReturnTransactionConfiguration());
            modelBuilder.Configurations.Add(new SaleConfiguration());
            modelBuilder.Configurations.Add(new SessionRecordConfiguration());
            modelBuilder.Configurations.Add(new TransactionConfiguration());
            modelBuilder.Configurations.Add(new VendorConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new ActivityDoneConfiguration(schema));
            modelBuilder.Configurations.Add(new ActivityRecordConfiguration(schema));
            modelBuilder.Configurations.Add(new AspNetRoleConfiguration(schema));
            modelBuilder.Configurations.Add(new AspNetUserConfiguration(schema));
            modelBuilder.Configurations.Add(new AspNetUserClaimConfiguration(schema));
            modelBuilder.Configurations.Add(new AspNetUserLoginConfiguration(schema));
            modelBuilder.Configurations.Add(new ClassConfiguration(schema));
            modelBuilder.Configurations.Add(new ClassroomConfiguration(schema));
            modelBuilder.Configurations.Add(new EmployeeConfiguration(schema));
            modelBuilder.Configurations.Add(new EquipmentConfiguration(schema));
            modelBuilder.Configurations.Add(new EquipmentTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new FitnessCourseConfiguration(schema));
            modelBuilder.Configurations.Add(new FitnessMeasureConfiguration(schema));
            modelBuilder.Configurations.Add(new InstructorConfiguration(schema));
            modelBuilder.Configurations.Add(new ItemConfiguration(schema));
            modelBuilder.Configurations.Add(new ItemReorderConfiguration(schema));
            modelBuilder.Configurations.Add(new MemberConfiguration(schema));
            modelBuilder.Configurations.Add(new MemTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new OrderConfiguration(schema));
            modelBuilder.Configurations.Add(new ReturnTransactionConfiguration(schema));
            modelBuilder.Configurations.Add(new SaleConfiguration(schema));
            modelBuilder.Configurations.Add(new SessionRecordConfiguration(schema));
            modelBuilder.Configurations.Add(new TransactionConfiguration(schema));
            modelBuilder.Configurations.Add(new VendorConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Database context factory

    public class MyDbContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<MyDbContext>
    {
        public MyDbContext Create()
        {
            return new MyDbContext();
        }
    }

    #endregion

    #region Fake Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeMyDbContext : IMyDbContext
    {
        public System.Data.Entity.DbSet<ActivityDone> ActivityDones { get; set; }
        public System.Data.Entity.DbSet<ActivityRecord> ActivityRecords { get; set; }
        public System.Data.Entity.DbSet<AspNetRole> AspNetRoles { get; set; }
        public System.Data.Entity.DbSet<AspNetUser> AspNetUsers { get; set; }
        public System.Data.Entity.DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public System.Data.Entity.DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public System.Data.Entity.DbSet<Class> Classes { get; set; }
        public System.Data.Entity.DbSet<Classroom> Classrooms { get; set; }
        public System.Data.Entity.DbSet<Employee> Employees { get; set; }
        public System.Data.Entity.DbSet<Equipment> Equipments { get; set; }
        public System.Data.Entity.DbSet<EquipmentType> EquipmentTypes { get; set; }
        public System.Data.Entity.DbSet<FitnessCourse> FitnessCourses { get; set; }
        public System.Data.Entity.DbSet<FitnessMeasure> FitnessMeasures { get; set; }
        public System.Data.Entity.DbSet<Instructor> Instructors { get; set; }
        public System.Data.Entity.DbSet<Item> Items { get; set; }
        public System.Data.Entity.DbSet<ItemReorder> ItemReorders { get; set; }
        public System.Data.Entity.DbSet<Member> Members { get; set; }
        public System.Data.Entity.DbSet<MemType> MemTypes { get; set; }
        public System.Data.Entity.DbSet<Order> Orders { get; set; }
        public System.Data.Entity.DbSet<ReturnTransaction> ReturnTransactions { get; set; }
        public System.Data.Entity.DbSet<Sale> Sales { get; set; }
        public System.Data.Entity.DbSet<SessionRecord> SessionRecords { get; set; }
        public System.Data.Entity.DbSet<Transaction> Transactions { get; set; }
        public System.Data.Entity.DbSet<Vendor> Vendors { get; set; }

        public FakeMyDbContext()
        {
            _changeTracker = null;
            _configuration = null;
            _database = null;

            ActivityDones = new FakeDbSet<ActivityDone>("Id");
            ActivityRecords = new FakeDbSet<ActivityRecord>("RecordId");
            AspNetRoles = new FakeDbSet<AspNetRole>("Id");
            AspNetUsers = new FakeDbSet<AspNetUser>("Id");
            AspNetUserClaims = new FakeDbSet<AspNetUserClaim>("Id");
            AspNetUserLogins = new FakeDbSet<AspNetUserLogin>("LoginProvider", "ProviderKey", "UserId");
            Classes = new FakeDbSet<Class>("ClassId");
            Classrooms = new FakeDbSet<Classroom>("RmId");
            Employees = new FakeDbSet<Employee>("EmpId");
            Equipments = new FakeDbSet<Equipment>("EquipId");
            EquipmentTypes = new FakeDbSet<EquipmentType>("EquipType");
            FitnessCourses = new FakeDbSet<FitnessCourse>("CourseId");
            FitnessMeasures = new FakeDbSet<FitnessMeasure>("DocumentId");
            Instructors = new FakeDbSet<Instructor>("InstructorId");
            Items = new FakeDbSet<Item>("ItemId");
            ItemReorders = new FakeDbSet<ItemReorder>("Id");
            Members = new FakeDbSet<Member>("MemId");
            MemTypes = new FakeDbSet<MemType>("MemType_");
            Orders = new FakeDbSet<Order>("OrderId");
            ReturnTransactions = new FakeDbSet<ReturnTransaction>("ReturnId");
            Sales = new FakeDbSet<Sale>("Id");
            SessionRecords = new FakeDbSet<SessionRecord>("SessionId");
            Transactions = new FakeDbSet<Transaction>("TransId");
            Vendors = new FakeDbSet<Vendor>("VendorId");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        private System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        private System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }

    }

    // ************************************************************************
    // Fake DbSet
    // Implementing Find:
    //      The Find method is difficult to implement in a generic fashion. If
    //      you need to test code that makes use of the Find method it is
    //      easiest to create a test DbSet for each of the entity types that
    //      need to support find. You can then write logic to find that
    //      particular type of entity, as shown below:
    //      public class FakeBlogDbSet : FakeDbSet<Blog>
    //      {
    //          public override Blog Find(params object[] keyValues)
    //          {
    //              var id = (int) keyValues.Single();
    //              return this.SingleOrDefault(b => b.BlogId == id);
    //          }
    //      }
    //      Read more about it here: https://msdn.microsoft.com/en-us/data/dn314431.aspx
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbSet<TEntity> : System.Data.Entity.DbSet<TEntity>, IQueryable, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity> where TEntity : class
    {
        private readonly System.Reflection.PropertyInfo[] _primaryKeys;
        private readonly System.Collections.ObjectModel.ObservableCollection<TEntity> _data;
        private readonly IQueryable _query;

        public FakeDbSet()
        {
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public FakeDbSet(params string[] primaryKeys)
        {
            _primaryKeys = typeof(TEntity).GetProperties().Where(x => primaryKeys.Contains(x.Name)).ToArray();
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public override TEntity Find(params object[] keyValues)
        {
            if (_primaryKeys == null)
                throw new System.ArgumentException("No primary keys defined");
            if (keyValues.Length != _primaryKeys.Length)
                throw new System.ArgumentException("Incorrect number of keys passed to Find method");

            var keyQuery = this.AsQueryable();
            keyQuery = keyValues
                .Select((t, i) => i)
                .Aggregate(keyQuery,
                    (current, x) =>
                        current.Where(entity => _primaryKeys[x].GetValue(entity, null).Equals(keyValues[x])));

            return keyQuery.SingleOrDefault();
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(System.Threading.CancellationToken cancellationToken, params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues), cancellationToken);
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues));
        }

        public override System.Collections.Generic.IEnumerable<TEntity> AddRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Add(entity);
            }
            return items;
        }

        public override TEntity Add(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override System.Collections.Generic.IEnumerable<TEntity> RemoveRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Remove(entity);
            }
            return items;
        }

        public override TEntity Remove(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Remove(item);
            return item;
        }

        public override TEntity Attach(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override TEntity Create()
        {
            return System.Activator.CreateInstance<TEntity>();
        }

        public override TDerivedEntity Create<TDerivedEntity>()
        {
            return System.Activator.CreateInstance<TDerivedEntity>();
        }

        public override System.Collections.ObjectModel.ObservableCollection<TEntity> Local
        {
            get { return _data; }
        }

        System.Type IQueryable.ElementType
        {
            get { return _query.ElementType; }
        }

        System.Linq.Expressions.Expression IQueryable.Expression
        {
            get { return _query.Expression; }
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<TEntity>(_query.Provider); }
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Collections.Generic.IEnumerator<TEntity> System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator<TEntity> System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity>.GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<TEntity>(_data.GetEnumerator());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbAsyncQueryProvider<TEntity> : System.Data.Entity.Infrastructure.IDbAsyncQueryProvider
    {
        private readonly IQueryProvider _inner;

        public FakeDbAsyncQueryProvider(IQueryProvider inner)
        {
            _inner = inner;
        }

        public IQueryable CreateQuery(System.Linq.Expressions.Expression expression)
        {
            var m = expression as System.Linq.Expressions.MethodCallExpression;
            if (m != null)
            {
                var resultType = m.Method.ReturnType; // it shoud be IQueryable<T>
                var tElement = resultType.GetGenericArguments()[0];
                var queryType = typeof(FakeDbAsyncEnumerable<>).MakeGenericType(tElement);
                return (IQueryable) System.Activator.CreateInstance(queryType, expression);
            }
            return new FakeDbAsyncEnumerable<TEntity>(expression);
        }

        public IQueryable<TElement> CreateQuery<TElement>(System.Linq.Expressions.Expression expression)
        {
            var queryType = typeof(FakeDbAsyncEnumerable<>).MakeGenericType(typeof(TElement));
            return (IQueryable<TElement>)System.Activator.CreateInstance(queryType, expression);
        }

        public object Execute(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute(expression);
        }

        public TResult Execute<TResult>(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute<TResult>(expression);
        }

        public System.Threading.Tasks.Task<object> ExecuteAsync(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute(expression));
        }

        public System.Threading.Tasks.Task<TResult> ExecuteAsync<TResult>(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute<TResult>(expression));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbAsyncEnumerable<T> : EnumerableQuery<T>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<T>, IQueryable<T>
    {
        public FakeDbAsyncEnumerable(System.Collections.Generic.IEnumerable<T> enumerable)
            : base(enumerable)
        { }

        public FakeDbAsyncEnumerable(System.Linq.Expressions.Expression expression)
            : base(expression)
        { }

        public System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T> GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<T>(this.AsEnumerable().GetEnumerator());
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator System.Data.Entity.Infrastructure.IDbAsyncEnumerable.GetAsyncEnumerator()
        {
            return GetAsyncEnumerator();
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<T>(this); }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FakeDbAsyncEnumerator<T> : System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T>
    {
        private readonly System.Collections.Generic.IEnumerator<T> _inner;

        public FakeDbAsyncEnumerator(System.Collections.Generic.IEnumerator<T> inner)
        {
            _inner = inner;
        }

        public void Dispose()
        {
            _inner.Dispose();
        }

        public System.Threading.Tasks.Task<bool> MoveNextAsync(System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(_inner.MoveNext());
        }

        public T Current
        {
            get { return _inner.Current; }
        }

        object System.Data.Entity.Infrastructure.IDbAsyncEnumerator.Current
        {
            get { return Current; }
        }
    }

    #endregion

    #region POCO classes

    // activity_done
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ActivityDone
    {
        public int? RecordId { get; set; } // record_id
        public string Activity { get; set; } // activity (length: 90)
        public decimal? Timespent { get; set; } // timespent
        public int Id { get; set; } // Id (Primary key)

        // Foreign keys

        /// <summary>
        /// Parent ActivityRecord pointed by [activity_done].([RecordId]) (FK__activity___recor__76969D2E)
        /// </summary>
        public virtual ActivityRecord ActivityRecord { get; set; } // FK__activity___recor__76969D2E
    }

    // activity_record
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ActivityRecord
    {
        public int RecordId { get; set; } // record_id (Primary key)
        public System.DateTime? Date { get; set; } // date
        public int? MemId { get; set; } // mem_id

        // Reverse navigation

        /// <summary>
        /// Child ActivityDones where [activity_done].[record_id] point to this entity (FK__activity___recor__76969D2E)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ActivityDone> ActivityDones { get; set; } // activity_done.FK__activity___recor__76969D2E

        // Foreign keys

        /// <summary>
        /// Parent Member pointed by [activity_record].([MemId]) (FK__activity___mem_i__74AE54BC)
        /// </summary>
        public virtual Member Member { get; set; } // FK__activity___mem_i__74AE54BC

        public ActivityRecord()
        {
            ActivityDones = new System.Collections.Generic.List<ActivityDone>();
        }
    }

    // The table 'activity_type' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // activity_type
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ActivityType
    {
        public string Name { get; set; } // Name (length: 255)
        public string Type { get; set; } // Type (length: 255)
    }

    // AspNetRoles
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AspNetRole
    {
        public string Id { get; set; } // Id (Primary key) (length: 128)
        public string Name { get; set; } // Name (length: 256)

        // Reverse navigation

        /// <summary>
        /// Child AspNetUsers (Many-to-Many) mapped by table [AspNetUserRoles]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AspNetUser> AspNetUsers { get; set; } // Many to many mapping

        public AspNetRole()
        {
            AspNetUsers = new System.Collections.Generic.List<AspNetUser>();
        }
    }

    // AspNetUsers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AspNetUser
    {
        public string Id { get; set; } // Id (Primary key) (length: 128)
        public string Email { get; set; } // Email (length: 256)
        public bool EmailConfirmed { get; set; } // EmailConfirmed
        public string PasswordHash { get; set; } // PasswordHash
        public string SecurityStamp { get; set; } // SecurityStamp
        public string PhoneNumber { get; set; } // PhoneNumber
        public bool PhoneNumberConfirmed { get; set; } // PhoneNumberConfirmed
        public bool TwoFactorEnabled { get; set; } // TwoFactorEnabled
        public System.DateTime? LockoutEndDateUtc { get; set; } // LockoutEndDateUtc
        public bool LockoutEnabled { get; set; } // LockoutEnabled
        public int AccessFailedCount { get; set; } // AccessFailedCount
        public string UserName { get; set; } // UserName (length: 256)

        // Reverse navigation

        /// <summary>
        /// Child AspNetRoles (Many-to-Many) mapped by table [AspNetUserRoles]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AspNetRole> AspNetRoles { get; set; } // Many to many mapping
        /// <summary>
        /// Child AspNetUserClaims where [AspNetUserClaims].[UserId] point to this entity (FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AspNetUserClaim> AspNetUserClaims { get; set; } // AspNetUserClaims.FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId
        /// <summary>
        /// Child AspNetUserLogins where [AspNetUserLogins].[UserId] point to this entity (FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<AspNetUserLogin> AspNetUserLogins { get; set; } // AspNetUserLogins.FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId

        public AspNetUser()
        {
            AspNetUserClaims = new System.Collections.Generic.List<AspNetUserClaim>();
            AspNetUserLogins = new System.Collections.Generic.List<AspNetUserLogin>();
            AspNetRoles = new System.Collections.Generic.List<AspNetRole>();
        }
    }

    // AspNetUserClaims
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AspNetUserClaim
    {
        public int Id { get; set; } // Id (Primary key)
        public string UserId { get; set; } // UserId (length: 128)
        public string ClaimType { get; set; } // ClaimType
        public string ClaimValue { get; set; } // ClaimValue

        // Foreign keys

        /// <summary>
        /// Parent AspNetUser pointed by [AspNetUserClaims].([UserId]) (FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId)
        /// </summary>
        public virtual AspNetUser AspNetUser { get; set; } // FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId
    }

    // AspNetUserLogins
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AspNetUserLogin
    {
        public string LoginProvider { get; set; } // LoginProvider (Primary key) (length: 128)
        public string ProviderKey { get; set; } // ProviderKey (Primary key) (length: 128)
        public string UserId { get; set; } // UserId (Primary key) (length: 128)

        // Foreign keys

        /// <summary>
        /// Parent AspNetUser pointed by [AspNetUserLogins].([UserId]) (FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId)
        /// </summary>
        public virtual AspNetUser AspNetUser { get; set; } // FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId
    }

    // class
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Class
    {
        public int ClassId { get; set; } // class_id (Primary key)
        public string ClassSchedule { get; set; } // class_schedule (length: 3)
        public string ClassLoc { get; set; } // class_loc (length: 15)
        public System.TimeSpan? ClassStarttime { get; set; } // class_starttime
        public System.TimeSpan? ClassEndtime { get; set; } // class_endtime
        public int? RmId { get; set; } // rm_id
        public string CourseId { get; set; } // course_id (length: 6)

        // Reverse navigation

        /// <summary>
        /// Child SessionRecords where [session_record].[class_id] point to this entity (FK__session_r__class__59FA5E80)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SessionRecord> SessionRecords { get; set; } // session_record.FK__session_r__class__59FA5E80

        // Foreign keys

        /// <summary>
        /// Parent Classroom pointed by [class].([RmId]) (FK__class__rm_id__52593CB8)
        /// </summary>
        public virtual Classroom Classroom { get; set; } // FK__class__rm_id__52593CB8

        /// <summary>
        /// Parent FitnessCourse pointed by [class].([CourseId]) (FK__class__course_id__534D60F1)
        /// </summary>
        public virtual FitnessCourse FitnessCourse { get; set; } // FK__class__course_id__534D60F1

        public Class()
        {
            SessionRecords = new System.Collections.Generic.List<SessionRecord>();
        }
    }

    // classroom
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Classroom
    {
        public int RmId { get; set; } // rm_id (Primary key)
        public int RmCapacity { get; set; } // rm_capacity
        public int? EquipId { get; set; } // equip_id

        // Reverse navigation

        /// <summary>
        /// Child Classes where [class].[rm_id] point to this entity (FK__class__rm_id__52593CB8)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Class> Classes { get; set; } // class.FK__class__rm_id__52593CB8
        /// <summary>
        /// Child Equipments where [equipment].[rm_id] point to this entity (FK__equipment__rm_id__4E88ABD4)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Equipment> Equipments { get; set; } // equipment.FK__equipment__rm_id__4E88ABD4

        // Foreign keys

        /// <summary>
        /// Parent Equipment pointed by [classroom].([EquipId]) (FK__classroom__equip__4D94879B)
        /// </summary>
        public virtual Equipment Equipment { get; set; } // FK__classroom__equip__4D94879B

        public Classroom()
        {
            Classes = new System.Collections.Generic.List<Class>();
            Equipments = new System.Collections.Generic.List<Equipment>();
        }
    }

    // employees
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Employee
    {
        public int EmpId { get; set; } // emp_id (Primary key)
        public string EmpName { get; set; } // emp_name (length: 90)
        public string EmpAddress { get; set; } // emp_address (length: 255)
        public string EmpPhone { get; set; } // emp_phone (length: 15)
        public System.DateTime? EmpHiredate { get; set; } // emp_hiredate
        public string EmpPosition { get; set; } // emp_position (length: 15)
        public System.DateTime? EmpLasthiredate { get; set; } // emp_lasthiredate
        public string EmpOther { get; set; } // emp_other (length: 150)
        public string Email { get; set; } // email (length: 255)

        // Reverse navigation

        /// <summary>
        /// Child Instructors where [instructor].[emp_id] point to this entity (FK__instructo__emp_i__5629CD9C)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Instructor> Instructors { get; set; } // instructor.FK__instructo__emp_i__5629CD9C
        /// <summary>
        /// Child Orders where [order].[emp_id] point to this entity (FK__order__emp_id__6383C8BA)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Order> Orders { get; set; } // order.FK__order__emp_id__6383C8BA
        /// <summary>
        /// Child Transactions where [transaction].[emp_id] point to this entity (FK__transacti__emp_i__68487DD7)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Transaction> Transactions { get; set; } // transaction.FK__transacti__emp_i__68487DD7

        public Employee()
        {
            Instructors = new System.Collections.Generic.List<Instructor>();
            Orders = new System.Collections.Generic.List<Order>();
            Transactions = new System.Collections.Generic.List<Transaction>();
        }
    }

    // equipment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Equipment
    {
        public int EquipId { get; set; } // equip_id (Primary key)
        public string EquipSerial { get; set; } // equip_serial (length: 90)
        public System.DateTime? EquipPurchasedate { get; set; } // equip_purchasedate
        public System.DateTime? EquipLastmaintenance { get; set; } // equip_lastmaintenance
        public string EquipType { get; set; } // equip_type (length: 15)
        public int? RmId { get; set; } // rm_id

        // Reverse navigation

        /// <summary>
        /// Child Classrooms where [classroom].[equip_id] point to this entity (FK__classroom__equip__4D94879B)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Classroom> Classrooms { get; set; } // classroom.FK__classroom__equip__4D94879B

        // Foreign keys

        /// <summary>
        /// Parent Classroom pointed by [equipment].([RmId]) (FK__equipment__rm_id__4E88ABD4)
        /// </summary>
        public virtual Classroom Classroom { get; set; } // FK__equipment__rm_id__4E88ABD4

        /// <summary>
        /// Parent EquipmentType pointed by [equipment].([EquipType]) (FK__equipment__equip__49C3F6B7)
        /// </summary>
        public virtual EquipmentType EquipmentType { get; set; } // FK__equipment__equip__49C3F6B7

        public Equipment()
        {
            Classrooms = new System.Collections.Generic.List<Classroom>();
        }
    }

    // equipment_type
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EquipmentType
    {
        public string EquipType { get; set; } // equip_type (Primary key) (length: 15)
        public string EquipDescription { get; set; } // equip_description (length: 255)
        public string EquipModel { get; set; } // equip_model (length: 90)
        public int? EquipMaintenaceInterval { get; set; } // equip_maintenace_interval
        public string CourseId { get; set; } // course_id (length: 6)

        // Reverse navigation

        /// <summary>
        /// Child Equipments where [equipment].[equip_type] point to this entity (FK__equipment__equip__49C3F6B7)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Equipment> Equipments { get; set; } // equipment.FK__equipment__equip__49C3F6B7

        // Foreign keys

        /// <summary>
        /// Parent FitnessCourse pointed by [equipment_type].([CourseId]) (FK__equipment__cours__46E78A0C)
        /// </summary>
        public virtual FitnessCourse FitnessCourse { get; set; } // FK__equipment__cours__46E78A0C

        public EquipmentType()
        {
            Equipments = new System.Collections.Generic.List<Equipment>();
        }
    }

    // fitness_course
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FitnessCourse
    {
        public string CourseId { get; set; } // course_id (Primary key) (length: 6)
        public string CourseName { get; set; } // course_name (length: 15)
        public string CourseDescription { get; set; } // course_description (length: 255)
        public string CourseCategory { get; set; } // course_category (length: 90)
        public int? CourseDuration { get; set; } // course_duration
        public string CoursePrereq { get; private set; } // course_prereq (length: 12)

        // Reverse navigation

        /// <summary>
        /// Child Classes where [class].[course_id] point to this entity (FK__class__course_id__534D60F1)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Class> Classes { get; set; } // class.FK__class__course_id__534D60F1
        /// <summary>
        /// Child EquipmentTypes where [equipment_type].[course_id] point to this entity (FK__equipment__cours__46E78A0C)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EquipmentType> EquipmentTypes { get; set; } // equipment_type.FK__equipment__cours__46E78A0C

        public FitnessCourse()
        {
            Classes = new System.Collections.Generic.List<Class>();
            EquipmentTypes = new System.Collections.Generic.List<EquipmentType>();
        }
    }

    // fitness_measure
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FitnessMeasure
    {
        public int? MemId { get; set; } // mem_id
        public System.DateTime? FitDate { get; set; } // fit_date
        public double FitBmi { get; set; } // fit_BMI
        public double FitFat { get; set; } // fit_fat
        public double FitWeight { get; set; } // fit_weight
        public int DocumentId { get; set; } // document_id (Primary key)

        // Foreign keys

        /// <summary>
        /// Parent Member pointed by [fitness_measure].([MemId]) (FK__fitness_m__mem_i__412EB0B6)
        /// </summary>
        public virtual Member Member { get; set; } // FK__fitness_m__mem_i__412EB0B6
    }

    // instructor
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Instructor
    {
        public int InstructorId { get; set; } // instructor_id (Primary key)
        public int? EmpId { get; set; } // emp_id
        public string CertExams { get; set; } // cert_exams (length: 90)
        public System.DateTime? CertExamDate { get; set; } // cert_exam_date

        // Reverse navigation

        /// <summary>
        /// Child SessionRecords where [session_record].[instructor_id] point to this entity (FK__session_r__instr__5AEE82B9)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SessionRecord> SessionRecords { get; set; } // session_record.FK__session_r__instr__5AEE82B9

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [instructor].([EmpId]) (FK__instructo__emp_i__5629CD9C)
        /// </summary>
        public virtual Employee Employee { get; set; } // FK__instructo__emp_i__5629CD9C

        public Instructor()
        {
            SessionRecords = new System.Collections.Generic.List<SessionRecord>();
        }
    }

    // item
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Item
    {
        public string ItemId { get; set; } // item_id (Primary key) (length: 15)
        public string ItemDescription { get; set; } // item_description (length: 255)
        public decimal? ItemPrice { get; set; } // item_price
        public int? ItemInventory { get; set; } // item_inventory
        public string ItemReorder { get; set; } // item_reorder (length: 3)
        public int? VendorId { get; set; } // vendorID

        // Reverse navigation

        /// <summary>
        /// Child ItemReorders where [item_reorder].[item_id] point to this entity (FK__item_reor__item___6D0D32F4)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ItemReorder> ItemReorders { get; set; } // item_reorder.FK__item_reor__item___6D0D32F4
        /// <summary>
        /// Child Sales where [sale].[item_id] point to this entity (FK__sale__item_id__6A30C649)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Sale> Sales { get; set; } // sale.FK__sale__item_id__6A30C649
        /// <summary>
        /// Child Transactions where [transaction].[item_id] point to this entity (FK__transacti__item___6754599E)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Transaction> Transactions { get; set; } // transaction.FK__transacti__item___6754599E

        // Foreign keys

        /// <summary>
        /// Parent Vendor pointed by [item].([VendorId]) (FK__item__vendorID__60A75C0F)
        /// </summary>
        public virtual Vendor Vendor { get; set; } // FK__item__vendorID__60A75C0F

        public Item()
        {
            ItemReorder = "No";
            ItemReorders = new System.Collections.Generic.List<ItemReorder>();
            Sales = new System.Collections.Generic.List<Sale>();
            Transactions = new System.Collections.Generic.List<Transaction>();
        }
    }

    // item_reorder
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ItemReorder
    {
        public string ItemId { get; set; } // item_id (length: 15)
        public int? ReorderQty { get; set; } // reorder_qty
        public int Id { get; set; } // Id (Primary key)

        // Foreign keys

        /// <summary>
        /// Parent Item pointed by [item_reorder].([ItemId]) (FK__item_reor__item___6D0D32F4)
        /// </summary>
        public virtual Item Item { get; set; } // FK__item_reor__item___6D0D32F4
    }

    // members
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Member
    {
        public int MemId { get; set; } // mem_id (Primary key)
        public string MemName { get; set; } // mem_name (length: 90)
        public string MemGender { get; set; } // mem_gender (length: 1)
        public string MemPhone { get; set; } // mem_phone (length: 15)
        public System.DateTime? MemDob { get; set; } // mem_dob
        public System.DateTime? MemDatejoined { get; set; } // mem_datejoined
        public double? MemInitialweight { get; set; } // mem_initialweight
        public string MemAddress { get; set; } // mem_address (length: 90)
        public int? MemParent { get; set; } // mem_parent
        public string MemType { get; set; } // mem_type (length: 90)

        // Reverse navigation

        /// <summary>
        /// Child ActivityRecords where [activity_record].[mem_id] point to this entity (FK__activity___mem_i__74AE54BC)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ActivityRecord> ActivityRecords { get; set; } // activity_record.FK__activity___mem_i__74AE54BC
        /// <summary>
        /// Child FitnessMeasures where [fitness_measure].[mem_id] point to this entity (FK__fitness_m__mem_i__412EB0B6)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<FitnessMeasure> FitnessMeasures { get; set; } // fitness_measure.FK__fitness_m__mem_i__412EB0B6
        /// <summary>
        /// Child Members where [members].[mem_parent] point to this entity (FK__members__mem_par__3E52440B)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Member> Members { get; set; } // members.FK__members__mem_par__3E52440B
        /// <summary>
        /// Child SessionRecords where [session_record].[mem_id] point to this entity (FK__session_r__mem_i__59063A47)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SessionRecord> SessionRecords { get; set; } // session_record.FK__session_r__mem_i__59063A47
        /// <summary>
        /// Child Transactions where [transaction].[mem_id] point to this entity (FK__transacti__mem_i__66603565)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Transaction> Transactions { get; set; } // transaction.FK__transacti__mem_i__66603565

        // Foreign keys

        /// <summary>
        /// Parent Member pointed by [members].([MemParent]) (FK__members__mem_par__3E52440B)
        /// </summary>
        public virtual Member Member_MemParent { get; set; } // FK__members__mem_par__3E52440B

        /// <summary>
        /// Parent MemType pointed by [members].([MemType]) (FK__members__mem_typ__3F466844)
        /// </summary>
        public virtual MemType MemType_MemType { get; set; } // FK__members__mem_typ__3F466844

        public Member()
        {
            ActivityRecords = new System.Collections.Generic.List<ActivityRecord>();
            FitnessMeasures = new System.Collections.Generic.List<FitnessMeasure>();
            Members = new System.Collections.Generic.List<Member>();
            SessionRecords = new System.Collections.Generic.List<SessionRecord>();
            Transactions = new System.Collections.Generic.List<Transaction>();
        }
    }

    // mem_type
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MemType
    {
        public string MemType_ { get; set; } // mem_type (Primary key) (length: 90)
        public double? MemFee { get; set; } // mem_fee
        public double? MemDiscount { get; set; } // mem_discount

        // Reverse navigation

        /// <summary>
        /// Child Members where [members].[mem_type] point to this entity (FK__members__mem_typ__3F466844)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Member> Members { get; set; } // members.FK__members__mem_typ__3F466844

        public MemType()
        {
            Members = new System.Collections.Generic.List<Member>();
        }
    }

    // order
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Order
    {
        public int OrderId { get; set; } // order_id (Primary key)
        public System.DateTime? OrderPlaced { get; set; } // order_placed
        public System.DateTime? OrderRecieved { get; set; } // order_recieved
        public string OrderItem { get; set; } // order_item (length: 90)
        public int? OrderQty { get; set; } // order_qty
        public int? OrderQtyRecieved { get; set; } // order_qty_recieved
        public decimal? OrderCostperitem { get; set; } // order_costperitem
        public int? EmpId { get; set; } // emp_id
        public decimal? OrderTotal { get; private set; } // order_total

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [order].([EmpId]) (FK__order__emp_id__6383C8BA)
        /// </summary>
        public virtual Employee Employee { get; set; } // FK__order__emp_id__6383C8BA
    }

    // return_transaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReturnTransaction
    {
        public int ReturnId { get; set; } // return_id (Primary key)
        public int? TransId { get; set; } // trans_id
        public string ReturnHist { get; set; } // return_hist (length: 255)

        // Foreign keys

        /// <summary>
        /// Parent Transaction pointed by [return_transaction].([TransId]) (FK__return_tr__trans__6FE99F9F)
        /// </summary>
        public virtual Transaction Transaction { get; set; } // FK__return_tr__trans__6FE99F9F
    }

    // sale
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Sale
    {
        public string ItemId { get; set; } // item_id (length: 15)
        public int? TransId { get; set; } // trans_id
        public int? TransQuantityPurchased { get; set; } // trans_quantity_purchased
        public int Id { get; set; } // Id (Primary key)

        // Foreign keys

        /// <summary>
        /// Parent Item pointed by [sale].([ItemId]) (FK__sale__item_id__6A30C649)
        /// </summary>
        public virtual Item Item { get; set; } // FK__sale__item_id__6A30C649

        /// <summary>
        /// Parent Transaction pointed by [sale].([TransId]) (FK__sale__trans_id__6B24EA82)
        /// </summary>
        public virtual Transaction Transaction { get; set; } // FK__sale__trans_id__6B24EA82
    }

    // session_record
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SessionRecord
    {
        public int SessionId { get; set; } // session_id (Primary key)
        public int? MemId { get; set; } // mem_id
        public int? ClassId { get; set; } // class_id
        public System.DateTime? SessionDate { get; set; } // session_date
        public int? InstructorId { get; set; } // instructor_id

        // Foreign keys

        /// <summary>
        /// Parent Class pointed by [session_record].([ClassId]) (FK__session_r__class__59FA5E80)
        /// </summary>
        public virtual Class Class { get; set; } // FK__session_r__class__59FA5E80

        /// <summary>
        /// Parent Instructor pointed by [session_record].([InstructorId]) (FK__session_r__instr__5AEE82B9)
        /// </summary>
        public virtual Instructor Instructor { get; set; } // FK__session_r__instr__5AEE82B9

        /// <summary>
        /// Parent Member pointed by [session_record].([MemId]) (FK__session_r__mem_i__59063A47)
        /// </summary>
        public virtual Member Member { get; set; } // FK__session_r__mem_i__59063A47
    }

    // transaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Transaction
    {
        public int TransId { get; set; } // trans_id (Primary key)
        public int? MemId { get; set; } // mem_id
        public System.DateTime? TransDate { get; set; } // trans_date
        public string ItemId { get; set; } // item_id (length: 15)
        public int? TransQuantityPurchased { get; set; } // trans_quantity_purchased
        public decimal? TransPurchasePrice { get; set; } // trans_purchase_price
        public int? EmpId { get; set; } // emp_id
        public decimal? TransPurchaseTotal { get; private set; } // trans_purchase_total

        // Reverse navigation

        /// <summary>
        /// Child ReturnTransactions where [return_transaction].[trans_id] point to this entity (FK__return_tr__trans__6FE99F9F)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ReturnTransaction> ReturnTransactions { get; set; } // return_transaction.FK__return_tr__trans__6FE99F9F
        /// <summary>
        /// Child Sales where [sale].[trans_id] point to this entity (FK__sale__trans_id__6B24EA82)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Sale> Sales { get; set; } // sale.FK__sale__trans_id__6B24EA82

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [transaction].([EmpId]) (FK__transacti__emp_i__68487DD7)
        /// </summary>
        public virtual Employee Employee { get; set; } // FK__transacti__emp_i__68487DD7

        /// <summary>
        /// Parent Item pointed by [transaction].([ItemId]) (FK__transacti__item___6754599E)
        /// </summary>
        public virtual Item Item { get; set; } // FK__transacti__item___6754599E

        /// <summary>
        /// Parent Member pointed by [transaction].([MemId]) (FK__transacti__mem_i__66603565)
        /// </summary>
        public virtual Member Member { get; set; } // FK__transacti__mem_i__66603565

        public Transaction()
        {
            ReturnTransactions = new System.Collections.Generic.List<ReturnTransaction>();
            Sales = new System.Collections.Generic.List<Sale>();
        }
    }

    // vendor
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class Vendor
    {
        public int VendorId { get; set; } // vendor_ID (Primary key)
        public string VendorName { get; set; } // vendor_name (length: 90)
        public string VendorAddress { get; set; } // vendor_address (length: 255)
        public string VendorPhone { get; set; } // vendor_phone (length: 15)
        public string VendorFax { get; set; } // vendor_fax (length: 15)

        // Reverse navigation

        /// <summary>
        /// Child Items where [item].[vendorID] point to this entity (FK__item__vendorID__60A75C0F)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Item> Items { get; set; } // item.FK__item__vendorID__60A75C0F

        public Vendor()
        {
            Items = new System.Collections.Generic.List<Item>();
        }
    }

    #endregion

    #region POCO Configuration

    // activity_done
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ActivityDoneConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ActivityDone>
    {
        public ActivityDoneConfiguration()
            : this("dbo")
        {
        }

        public ActivityDoneConfiguration(string schema)
        {
            ToTable("activity_done", schema);
            HasKey(x => x.Id);

            Property(x => x.RecordId).HasColumnName(@"record_id").HasColumnType("int").IsOptional();
            Property(x => x.Activity).HasColumnName(@"activity").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(90);
            Property(x => x.Timespent).HasColumnName(@"timespent").HasColumnType("decimal").IsOptional().HasPrecision(2,2);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            // Foreign keys
            HasOptional(a => a.ActivityRecord).WithMany(b => b.ActivityDones).HasForeignKey(c => c.RecordId).WillCascadeOnDelete(false); // FK__activity___recor__76969D2E
        }
    }

    // activity_record
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ActivityRecordConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ActivityRecord>
    {
        public ActivityRecordConfiguration()
            : this("dbo")
        {
        }

        public ActivityRecordConfiguration(string schema)
        {
            ToTable("activity_record", schema);
            HasKey(x => x.RecordId);

            Property(x => x.RecordId).HasColumnName(@"record_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Date).HasColumnName(@"date").HasColumnType("datetime").IsOptional();
            Property(x => x.MemId).HasColumnName(@"mem_id").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Member).WithMany(b => b.ActivityRecords).HasForeignKey(c => c.MemId).WillCascadeOnDelete(false); // FK__activity___mem_i__74AE54BC
        }
    }

    // AspNetRoles
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AspNetRoleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AspNetRole>
    {
        public AspNetRoleConfiguration()
            : this("dbo")
        {
        }

        public AspNetRoleConfiguration(string schema)
        {
            ToTable("AspNetRoles", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(256);
            HasMany(t => t.AspNetUsers).WithMany(t => t.AspNetRoles).Map(m =>
            {
                m.ToTable("AspNetUserRoles", "dbo");
                m.MapLeftKey("RoleId");
                m.MapRightKey("UserId");
            });
        }
    }

    // AspNetUsers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AspNetUserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AspNetUser>
    {
        public AspNetUserConfiguration()
            : this("dbo")
        {
        }

        public AspNetUserConfiguration(string schema)
        {
            ToTable("AspNetUsers", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar").IsOptional().HasMaxLength(256);
            Property(x => x.EmailConfirmed).HasColumnName(@"EmailConfirmed").HasColumnType("bit").IsRequired();
            Property(x => x.PasswordHash).HasColumnName(@"PasswordHash").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.SecurityStamp).HasColumnName(@"SecurityStamp").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.PhoneNumber).HasColumnName(@"PhoneNumber").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.PhoneNumberConfirmed).HasColumnName(@"PhoneNumberConfirmed").HasColumnType("bit").IsRequired();
            Property(x => x.TwoFactorEnabled).HasColumnName(@"TwoFactorEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.LockoutEndDateUtc).HasColumnName(@"LockoutEndDateUtc").HasColumnType("datetime").IsOptional();
            Property(x => x.LockoutEnabled).HasColumnName(@"LockoutEnabled").HasColumnType("bit").IsRequired();
            Property(x => x.AccessFailedCount).HasColumnName(@"AccessFailedCount").HasColumnType("int").IsRequired();
            Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType("nvarchar").IsRequired().HasMaxLength(256);
        }
    }

    // AspNetUserClaims
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AspNetUserClaimConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AspNetUserClaim>
    {
        public AspNetUserClaimConfiguration()
            : this("dbo")
        {
        }

        public AspNetUserClaimConfiguration(string schema)
        {
            ToTable("AspNetUserClaims", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.ClaimType).HasColumnName(@"ClaimType").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.ClaimValue).HasColumnName(@"ClaimValue").HasColumnType("nvarchar(max)").IsOptional();

            // Foreign keys
            HasRequired(a => a.AspNetUser).WithMany(b => b.AspNetUserClaims).HasForeignKey(c => c.UserId); // FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId
        }
    }

    // AspNetUserLogins
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class AspNetUserLoginConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AspNetUserLogin>
    {
        public AspNetUserLoginConfiguration()
            : this("dbo")
        {
        }

        public AspNetUserLoginConfiguration(string schema)
        {
            ToTable("AspNetUserLogins", schema);
            HasKey(x => new { x.LoginProvider, x.ProviderKey, x.UserId });

            Property(x => x.LoginProvider).HasColumnName(@"LoginProvider").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ProviderKey).HasColumnName(@"ProviderKey").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("nvarchar").IsRequired().HasMaxLength(128).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);

            // Foreign keys
            HasRequired(a => a.AspNetUser).WithMany(b => b.AspNetUserLogins).HasForeignKey(c => c.UserId); // FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId
        }
    }

    // class
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ClassConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Class>
    {
        public ClassConfiguration()
            : this("dbo")
        {
        }

        public ClassConfiguration(string schema)
        {
            ToTable("class", schema);
            HasKey(x => x.ClassId);

            Property(x => x.ClassId).HasColumnName(@"class_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ClassSchedule).HasColumnName(@"class_schedule").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(3);
            Property(x => x.ClassLoc).HasColumnName(@"class_loc").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.ClassStarttime).HasColumnName(@"class_starttime").HasColumnType("time").IsOptional();
            Property(x => x.ClassEndtime).HasColumnName(@"class_endtime").HasColumnType("time").IsOptional();
            Property(x => x.RmId).HasColumnName(@"rm_id").HasColumnType("int").IsOptional();
            Property(x => x.CourseId).HasColumnName(@"course_id").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(6);

            // Foreign keys
            HasOptional(a => a.Classroom).WithMany(b => b.Classes).HasForeignKey(c => c.RmId).WillCascadeOnDelete(false); // FK__class__rm_id__52593CB8
            HasOptional(a => a.FitnessCourse).WithMany(b => b.Classes).HasForeignKey(c => c.CourseId).WillCascadeOnDelete(false); // FK__class__course_id__534D60F1
        }
    }

    // classroom
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ClassroomConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Classroom>
    {
        public ClassroomConfiguration()
            : this("dbo")
        {
        }

        public ClassroomConfiguration(string schema)
        {
            ToTable("classroom", schema);
            HasKey(x => x.RmId);

            Property(x => x.RmId).HasColumnName(@"rm_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.RmCapacity).HasColumnName(@"rm_capacity").HasColumnType("int").IsRequired();
            Property(x => x.EquipId).HasColumnName(@"equip_id").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Equipment).WithMany(b => b.Classrooms).HasForeignKey(c => c.EquipId).WillCascadeOnDelete(false); // FK__classroom__equip__4D94879B
        }
    }

    // employees
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EmployeeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Employee>
    {
        public EmployeeConfiguration()
            : this("dbo")
        {
        }

        public EmployeeConfiguration(string schema)
        {
            ToTable("employees", schema);
            HasKey(x => x.EmpId);

            Property(x => x.EmpId).HasColumnName(@"emp_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpName).HasColumnName(@"emp_name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(90);
            Property(x => x.EmpAddress).HasColumnName(@"emp_address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.EmpPhone).HasColumnName(@"emp_phone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.EmpHiredate).HasColumnName(@"emp_hiredate").HasColumnType("datetime").IsOptional();
            Property(x => x.EmpPosition).HasColumnName(@"emp_position").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.EmpLasthiredate).HasColumnName(@"emp_lasthiredate").HasColumnType("datetime").IsOptional();
            Property(x => x.EmpOther).HasColumnName(@"emp_other").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(150);
            Property(x => x.Email).HasColumnName(@"email").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
        }
    }

    // equipment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EquipmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Equipment>
    {
        public EquipmentConfiguration()
            : this("dbo")
        {
        }

        public EquipmentConfiguration(string schema)
        {
            ToTable("equipment", schema);
            HasKey(x => x.EquipId);

            Property(x => x.EquipId).HasColumnName(@"equip_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EquipSerial).HasColumnName(@"equip_serial").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(90);
            Property(x => x.EquipPurchasedate).HasColumnName(@"equip_purchasedate").HasColumnType("datetime").IsOptional();
            Property(x => x.EquipLastmaintenance).HasColumnName(@"equip_lastmaintenance").HasColumnType("datetime").IsOptional();
            Property(x => x.EquipType).HasColumnName(@"equip_type").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.RmId).HasColumnName(@"rm_id").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Classroom).WithMany(b => b.Equipments).HasForeignKey(c => c.RmId).WillCascadeOnDelete(false); // FK__equipment__rm_id__4E88ABD4
            HasOptional(a => a.EquipmentType).WithMany(b => b.Equipments).HasForeignKey(c => c.EquipType).WillCascadeOnDelete(false); // FK__equipment__equip__49C3F6B7
        }
    }

    // equipment_type
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class EquipmentTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EquipmentType>
    {
        public EquipmentTypeConfiguration()
            : this("dbo")
        {
        }

        public EquipmentTypeConfiguration(string schema)
        {
            ToTable("equipment_type", schema);
            HasKey(x => x.EquipType);

            Property(x => x.EquipType).HasColumnName(@"equip_type").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EquipDescription).HasColumnName(@"equip_description").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.EquipModel).HasColumnName(@"equip_model").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(90);
            Property(x => x.EquipMaintenaceInterval).HasColumnName(@"equip_maintenace_interval").HasColumnType("int").IsOptional();
            Property(x => x.CourseId).HasColumnName(@"course_id").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(6);

            // Foreign keys
            HasOptional(a => a.FitnessCourse).WithMany(b => b.EquipmentTypes).HasForeignKey(c => c.CourseId).WillCascadeOnDelete(false); // FK__equipment__cours__46E78A0C
        }
    }

    // fitness_course
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FitnessCourseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FitnessCourse>
    {
        public FitnessCourseConfiguration()
            : this("dbo")
        {
        }

        public FitnessCourseConfiguration(string schema)
        {
            ToTable("fitness_course", schema);
            HasKey(x => x.CourseId);

            Property(x => x.CourseId).HasColumnName(@"course_id").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(6).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CourseName).HasColumnName(@"course_name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.CourseDescription).HasColumnName(@"course_description").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.CourseCategory).HasColumnName(@"course_category").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(90);
            Property(x => x.CourseDuration).HasColumnName(@"course_duration").HasColumnType("int").IsOptional();
            Property(x => x.CoursePrereq).HasColumnName(@"course_prereq").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(12).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
        }
    }

    // fitness_measure
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class FitnessMeasureConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FitnessMeasure>
    {
        public FitnessMeasureConfiguration()
            : this("dbo")
        {
        }

        public FitnessMeasureConfiguration(string schema)
        {
            ToTable("fitness_measure", schema);
            HasKey(x => x.DocumentId);

            Property(x => x.MemId).HasColumnName(@"mem_id").HasColumnType("int").IsOptional();
            Property(x => x.FitDate).HasColumnName(@"fit_date").HasColumnType("datetime").IsOptional();
            Property(x => x.FitBmi).HasColumnName(@"fit_BMI").HasColumnType("float").IsRequired();
            Property(x => x.FitFat).HasColumnName(@"fit_fat").HasColumnType("float").IsRequired();
            Property(x => x.FitWeight).HasColumnName(@"fit_weight").HasColumnType("float").IsRequired();
            Property(x => x.DocumentId).HasColumnName(@"document_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);

            // Foreign keys
            HasOptional(a => a.Member).WithMany(b => b.FitnessMeasures).HasForeignKey(c => c.MemId).WillCascadeOnDelete(false); // FK__fitness_m__mem_i__412EB0B6
        }
    }

    // instructor
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class InstructorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Instructor>
    {
        public InstructorConfiguration()
            : this("dbo")
        {
        }

        public InstructorConfiguration(string schema)
        {
            ToTable("instructor", schema);
            HasKey(x => x.InstructorId);

            Property(x => x.InstructorId).HasColumnName(@"instructor_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmpId).HasColumnName(@"emp_id").HasColumnType("int").IsOptional();
            Property(x => x.CertExams).HasColumnName(@"cert_exams").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(90);
            Property(x => x.CertExamDate).HasColumnName(@"cert_exam_date").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Employee).WithMany(b => b.Instructors).HasForeignKey(c => c.EmpId).WillCascadeOnDelete(false); // FK__instructo__emp_i__5629CD9C
        }
    }

    // item
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ItemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Item>
    {
        public ItemConfiguration()
            : this("dbo")
        {
        }

        public ItemConfiguration(string schema)
        {
            ToTable("item", schema);
            HasKey(x => x.ItemId);

            Property(x => x.ItemId).HasColumnName(@"item_id").HasColumnType("nvarchar").IsRequired().HasMaxLength(15).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ItemDescription).HasColumnName(@"item_description").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.ItemPrice).HasColumnName(@"item_price").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.ItemInventory).HasColumnName(@"item_inventory").HasColumnType("int").IsOptional();
            Property(x => x.ItemReorder).HasColumnName(@"item_reorder").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(3);
            Property(x => x.VendorId).HasColumnName(@"vendorID").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Vendor).WithMany(b => b.Items).HasForeignKey(c => c.VendorId).WillCascadeOnDelete(false); // FK__item__vendorID__60A75C0F
        }
    }

    // item_reorder
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ItemReorderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ItemReorder>
    {
        public ItemReorderConfiguration()
            : this("dbo")
        {
        }

        public ItemReorderConfiguration(string schema)
        {
            ToTable("item_reorder", schema);
            HasKey(x => x.Id);

            Property(x => x.ItemId).HasColumnName(@"item_id").HasColumnType("nvarchar").IsOptional().HasMaxLength(15);
            Property(x => x.ReorderQty).HasColumnName(@"reorder_qty").HasColumnType("int").IsOptional();
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            // Foreign keys
            HasOptional(a => a.Item).WithMany(b => b.ItemReorders).HasForeignKey(c => c.ItemId).WillCascadeOnDelete(false); // FK__item_reor__item___6D0D32F4
        }
    }

    // members
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MemberConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Member>
    {
        public MemberConfiguration()
            : this("dbo")
        {
        }

        public MemberConfiguration(string schema)
        {
            ToTable("members", schema);
            HasKey(x => x.MemId);

            Property(x => x.MemId).HasColumnName(@"mem_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MemName).HasColumnName(@"mem_name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(90);
            Property(x => x.MemGender).HasColumnName(@"mem_gender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.MemPhone).HasColumnName(@"mem_phone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.MemDob).HasColumnName(@"mem_dob").HasColumnType("datetime").IsOptional();
            Property(x => x.MemDatejoined).HasColumnName(@"mem_datejoined").HasColumnType("datetime").IsOptional();
            Property(x => x.MemInitialweight).HasColumnName(@"mem_initialweight").HasColumnType("float").IsOptional();
            Property(x => x.MemAddress).HasColumnName(@"mem_address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(90);
            Property(x => x.MemParent).HasColumnName(@"mem_parent").HasColumnType("int").IsOptional();
            Property(x => x.MemType).HasColumnName(@"mem_type").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(90);

            // Foreign keys
            HasOptional(a => a.Member_MemParent).WithMany(b => b.Members).HasForeignKey(c => c.MemParent).WillCascadeOnDelete(false); // FK__members__mem_par__3E52440B
            HasOptional(a => a.MemType_MemType).WithMany(b => b.Members).HasForeignKey(c => c.MemType).WillCascadeOnDelete(false); // FK__members__mem_typ__3F466844
        }
    }

    // mem_type
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class MemTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MemType>
    {
        public MemTypeConfiguration()
            : this("dbo")
        {
        }

        public MemTypeConfiguration(string schema)
        {
            ToTable("mem_type", schema);
            HasKey(x => x.MemType_);

            Property(x => x.MemType_).HasColumnName(@"mem_type").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(90).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MemFee).HasColumnName(@"mem_fee").HasColumnType("float").IsOptional();
            Property(x => x.MemDiscount).HasColumnName(@"mem_discount").HasColumnType("float").IsOptional();
        }
    }

    // order
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class OrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Order>
    {
        public OrderConfiguration()
            : this("dbo")
        {
        }

        public OrderConfiguration(string schema)
        {
            ToTable("order", schema);
            HasKey(x => x.OrderId);

            Property(x => x.OrderId).HasColumnName(@"order_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OrderPlaced).HasColumnName(@"order_placed").HasColumnType("datetime").IsOptional();
            Property(x => x.OrderRecieved).HasColumnName(@"order_recieved").HasColumnType("datetime").IsOptional();
            Property(x => x.OrderItem).HasColumnName(@"order_item").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(90);
            Property(x => x.OrderQty).HasColumnName(@"order_qty").HasColumnType("int").IsOptional();
            Property(x => x.OrderQtyRecieved).HasColumnName(@"order_qty_recieved").HasColumnType("int").IsOptional();
            Property(x => x.OrderCostperitem).HasColumnName(@"order_costperitem").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.EmpId).HasColumnName(@"emp_id").HasColumnType("int").IsOptional();
            Property(x => x.OrderTotal).HasColumnName(@"order_total").HasColumnType("money").IsOptional().HasPrecision(19,4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);

            // Foreign keys
            HasOptional(a => a.Employee).WithMany(b => b.Orders).HasForeignKey(c => c.EmpId).WillCascadeOnDelete(false); // FK__order__emp_id__6383C8BA
        }
    }

    // return_transaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class ReturnTransactionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ReturnTransaction>
    {
        public ReturnTransactionConfiguration()
            : this("dbo")
        {
        }

        public ReturnTransactionConfiguration(string schema)
        {
            ToTable("return_transaction", schema);
            HasKey(x => x.ReturnId);

            Property(x => x.ReturnId).HasColumnName(@"return_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TransId).HasColumnName(@"trans_id").HasColumnType("int").IsOptional();
            Property(x => x.ReturnHist).HasColumnName(@"return_hist").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);

            // Foreign keys
            HasOptional(a => a.Transaction).WithMany(b => b.ReturnTransactions).HasForeignKey(c => c.TransId).WillCascadeOnDelete(false); // FK__return_tr__trans__6FE99F9F
        }
    }

    // sale
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SaleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Sale>
    {
        public SaleConfiguration()
            : this("dbo")
        {
        }

        public SaleConfiguration(string schema)
        {
            ToTable("sale", schema);
            HasKey(x => x.Id);

            Property(x => x.ItemId).HasColumnName(@"item_id").HasColumnType("nvarchar").IsOptional().HasMaxLength(15);
            Property(x => x.TransId).HasColumnName(@"trans_id").HasColumnType("int").IsOptional();
            Property(x => x.TransQuantityPurchased).HasColumnName(@"trans_quantity_purchased").HasColumnType("int").IsOptional();
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);

            // Foreign keys
            HasOptional(a => a.Item).WithMany(b => b.Sales).HasForeignKey(c => c.ItemId).WillCascadeOnDelete(false); // FK__sale__item_id__6A30C649
            HasOptional(a => a.Transaction).WithMany(b => b.Sales).HasForeignKey(c => c.TransId).WillCascadeOnDelete(false); // FK__sale__trans_id__6B24EA82
        }
    }

    // session_record
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class SessionRecordConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SessionRecord>
    {
        public SessionRecordConfiguration()
            : this("dbo")
        {
        }

        public SessionRecordConfiguration(string schema)
        {
            ToTable("session_record", schema);
            HasKey(x => x.SessionId);

            Property(x => x.SessionId).HasColumnName(@"session_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MemId).HasColumnName(@"mem_id").HasColumnType("int").IsOptional();
            Property(x => x.ClassId).HasColumnName(@"class_id").HasColumnType("int").IsOptional();
            Property(x => x.SessionDate).HasColumnName(@"session_date").HasColumnType("datetime").IsOptional();
            Property(x => x.InstructorId).HasColumnName(@"instructor_id").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Class).WithMany(b => b.SessionRecords).HasForeignKey(c => c.ClassId).WillCascadeOnDelete(false); // FK__session_r__class__59FA5E80
            HasOptional(a => a.Instructor).WithMany(b => b.SessionRecords).HasForeignKey(c => c.InstructorId).WillCascadeOnDelete(false); // FK__session_r__instr__5AEE82B9
            HasOptional(a => a.Member).WithMany(b => b.SessionRecords).HasForeignKey(c => c.MemId).WillCascadeOnDelete(false); // FK__session_r__mem_i__59063A47
        }
    }

    // transaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class TransactionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Transaction>
    {
        public TransactionConfiguration()
            : this("dbo")
        {
        }

        public TransactionConfiguration(string schema)
        {
            ToTable("transaction", schema);
            HasKey(x => x.TransId);

            Property(x => x.TransId).HasColumnName(@"trans_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MemId).HasColumnName(@"mem_id").HasColumnType("int").IsOptional();
            Property(x => x.TransDate).HasColumnName(@"trans_date").HasColumnType("datetime").IsOptional();
            Property(x => x.ItemId).HasColumnName(@"item_id").HasColumnType("nvarchar").IsOptional().HasMaxLength(15);
            Property(x => x.TransQuantityPurchased).HasColumnName(@"trans_quantity_purchased").HasColumnType("int").IsOptional();
            Property(x => x.TransPurchasePrice).HasColumnName(@"trans_purchase_price").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.EmpId).HasColumnName(@"emp_id").HasColumnType("int").IsOptional();
            Property(x => x.TransPurchaseTotal).HasColumnName(@"trans_purchase_total").HasColumnType("money").IsOptional().HasPrecision(19,4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);

            // Foreign keys
            HasOptional(a => a.Employee).WithMany(b => b.Transactions).HasForeignKey(c => c.EmpId).WillCascadeOnDelete(false); // FK__transacti__emp_i__68487DD7
            HasOptional(a => a.Item).WithMany(b => b.Transactions).HasForeignKey(c => c.ItemId).WillCascadeOnDelete(false); // FK__transacti__item___6754599E
            HasOptional(a => a.Member).WithMany(b => b.Transactions).HasForeignKey(c => c.MemId).WillCascadeOnDelete(false); // FK__transacti__mem_i__66603565
        }
    }

    // vendor
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class VendorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Vendor>
    {
        public VendorConfiguration()
            : this("dbo")
        {
        }

        public VendorConfiguration(string schema)
        {
            ToTable("vendor", schema);
            HasKey(x => x.VendorId);

            Property(x => x.VendorId).HasColumnName(@"vendor_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.VendorName).HasColumnName(@"vendor_name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(90);
            Property(x => x.VendorAddress).HasColumnName(@"vendor_address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.VendorPhone).HasColumnName(@"vendor_phone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.VendorFax).HasColumnName(@"vendor_fax").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
        }
    }

    #endregion

}
// </auto-generated>

